#include<bits/stdc++.h>
#define int long long
using namespace std;
vector<pair<int,int>> adj[1000005];
vector<int> path(1000005,-1);
vector<int> dis(1000005,LLONG_MAX);

signed main(){
     

     int n,m;
     cin>>n>>m;
     

     
     for(int i=0;i<m;i++){
          
          int a,b,w;
          cin>>a>>b>>w;
          adj[a].push_back({w,b});
          adj[b].push_back({w,a});
     }
     
     priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
     
     pq.push({0,1});
     while(!pq.empty()){
          
          int wt=pq.top().first;
          int node=pq.top().second;
          
          pq.pop();
          for(auto it: adj[node]){
          int dist=it.first;
          int adjNode=it.second;
          if(wt+dist<dis[adjNode]){
               dis[adjNode]=wt+dist;
               pq.push({dis[adjNode],adjNode});
               path[adjNode]=node;
          }
          
          }
     }
     
     vector<int> ans;
     int flag=0;
     for(int i=n;i!=1;i=path[i]){
          if(i==-1){
              flag=1;
              break;
          }
          ans.push_back(i);
     }
     ans.push_back(1);
     if(flag)
     cout<<-1;
     else{
     
     for(int i=ans.size()-1;i>=0;i--)
     cout<<ans[i]<<" ";
     }
     
     return 0;
}
